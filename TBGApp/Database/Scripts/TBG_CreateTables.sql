use TBG

if (exists(select 1 from INFORMATION_SCHEMA.TABLES where TABLE_TYPE = 'BASE TABLE' and TABLE_NAME = 'TBTBG_QUESTION_CARD_REL')) begin
	drop table TBTBG_QUESTION_CARD_REL
end

if (exists(select 1 from INFORMATION_SCHEMA.TABLES where TABLE_TYPE = 'BASE TABLE' and TABLE_NAME = 'TBTBG_QUESTION_ALTERNATIVES')) begin
	drop table TBTBG_QUESTION_ALTERNATIVES
end

if (exists(select 1 from INFORMATION_SCHEMA.TABLES where TABLE_TYPE = 'BASE TABLE' and TABLE_NAME = 'TBTBG_QUESTIONS')) begin
	drop table TBTBG_QUESTIONS
end

if (exists(select 1 from INFORMATION_SCHEMA.TABLES where TABLE_TYPE = 'BASE TABLE' and TABLE_NAME = 'TBTBG_CARDS')) begin
	drop table TBTBG_CARDS
end

create table TBTBG_CARDS (
	CARD_ID
		INT
		PRIMARY KEY
		CLUSTERED
		NOT NULL
,	CARD_NAME
		VARCHAR(64)
		NOT NULL
,	CARD_THEME
		VARCHAR(16)
		NOT NULL
,	CARD_DIFFICULTY
		VARCHAR(8)
		NOT NULL
)

create table TBTBG_QUESTIONS (
	QUESTION_ID
		INT
		PRIMARY KEY
		CLUSTERED
		NOT NULL
,	QUESTION_DESC
		VARCHAR(1024)
		NOT NULL
,	QUESTION_THEME
		VARCHAR(16)
		NOT NULL
,	QUESTION_DIFFICULTY
		VARCHAR(8)
		NOT NULL
)

create table TBTBG_QUESTION_ALTERNATIVES (
	ALTERNATIVE_ID
		INT
		IDENTITY(1, 1)
		PRIMARY KEY
		CLUSTERED
		NOT NULL
,	ALTERNATIVE_DESC
		VARCHAR(128)
		NOT NULL
,	ALTERNATIVE_CORRECT
		BIT
		NOT NULL
,	ALTERNATIVE_ORDER
		INT
		NOT NULL
,	QUESTION_ID
		INT
		NOT NULL
		CONSTRAINT FK_QUESTION_ALTERNATIVES__QUESTION_ID
			REFERENCES TBTBG_QUESTIONS(QUESTION_ID)
)

create table TBTBG_QUESTION_CARD_REL (
	CARD_ID
		INT
		NOT NULL
		CONSTRAINT FK_CARDS__CARD_ID
			REFERENCES TBTBG_CARDS(CARD_ID)
,	QUESTION_ID
		INT
		NOT NULL
		CONSTRAINT FK_QUESTION_CARD_REL__QUESTION_ID
			REFERENCES TBTBG_QUESTIONS(QUESTION_ID)
,	CONSTRAINT PK_QUESTION_CARD_REL__CARD_ID__QUESTION_ID
		PRIMARY KEY
		CLUSTERED(CARD_ID, QUESTION_ID)
)

if (not exists(select 1 from sys.indexes where name = 'IX_QUESTION_ALTERNATIVES__QUESTION_ID' and OBJECT_ID = OBJECT_ID('TBTBG_QUESTION_ALTERNATIVES'))) begin
	create index IX_QUESTION_ALTERNATIVES__QUESTION_ID on TBTBG_QUESTION_ALTERNATIVES(QUESTION_ID)
end